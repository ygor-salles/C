//Arquivo FilaDin.h
struct aluno 
{
    int matricula;
    char nome[30];
    float n1, n2; n3;
};
typedef struct fila Fila;

//Arquivo Main.c
Fila *fi;

/****************************************************************************/
//Arquivo FilaDin.c
#include<stdio.h>
#include<stdlib.h>

struct fila
{
    struct elemento *inicio;
    struct elemento *fim;
};
struct elemento 
{
    struct aluno dados;
    struct elemento *prox;
};
typedef struct elemento Elemento;

/****************************************************************************/
Fila* criar_Fila()
{
  Fila *fi = (Fila*) malloc(sizeof(Fila));
  if (fi != NULL){
    fi->inicio = NULL;
    fi->fim = NULL;
  }
  return fi;  
}

/****************************************************************************/
Elemento criar_elemento()
{
    Elemento *no = (Elemento*) malloc(sizeof(Elemento));
    if (no == NULL) return 0;
    
    return no;
}

/****************************************************************************/
void libera_fila(Fila* fi)
{
    if (fi == NULL) return 0;
    else{
        Elemento* no;
        while (fi->inicio != NULL){
            no = fi->inicio;
            fi->inicio = fi->inicio->prox;
            free(no);
        }
        free(fi);
    }
}

/****************************************************************************/
int tamanho_fila(Fila* fi)
{
    if (fi == NULL) return 0;
    int cont=0;
    Elemento* no = fi->inicio;
    
    while(no != NULL){
        cont++;
        no = no->prox;
    }
    return cont;
}

/****************************************************************************/
int fila_cheia(Fila* fi)
{
    return 0;
}

/****************************************************************************/
int fila_vazia(Fila* fi)
{
    if (fi == NULL) return 1;
    if (fi->inicio == NULL) return 1;
    return 0;
}

/****************************************************************************/
int enfileirar(Fila* fi, struct aluno al)
{
    if (fi == NULL) return 0;
    Elemento *no;
    no = criar_elemento();
    
    no->dados = al;
    no->prox = NULL;
    if (fi->fim == NULL)
        fi->inicio = no;
    else
        fi->fim->prox = no;
    fi->fim = no;
    
    return 1;
}

/****************************************************************************/
int desinfileirar(Fila* fi)
{
    if (fi == NULL) return 0;
    if (fi->inicio == NULL) return 0;
    
    Elemento *no = fi->inicio;
    fi->inicio = fi->inicio->prox;
    if (fi->inicio == NULL)
        fi->fim = NULL;
    free(no);
    
    return 1;
}

/****************************************************************************/
int consulta_fila(Fila *fi, struct aluno *al)
{
    if (fi == NULL) return 0;
    if (fi->inicio == NULL) return 0;
    
    *al = fi->inicio->dados;
    
    return 1;
}